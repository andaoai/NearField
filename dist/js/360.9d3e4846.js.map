{"version":3,"file":"js/360.9d3e4846.js","mappings":"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","sources":["webpack://web-system/./src/views/HomeView.vue","webpack://web-system/src/views/HomeView.vue","webpack://web-system/./src/views/HomeView.vue?2a07","webpack://web-system/./src/views/HomeView.vue?aae2","webpack://web-system/./src/data/line.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\"},[_c('el-container',[_c('el-main',{staticStyle:{\"padding\":\"0px\",\"height\":\"calc(100vh - 60px)\"}},[_c('div',{attrs:{\"id\":\"container\"}})]),_c('el-aside',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowDeviceInfo),expression:\"isShowDeviceInfo\"}],attrs:{\"width\":\"300px\"}},[_c('el-header',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\",\"align-items\":\"center\",\"height\":\"40px\"}},[_c('div',{staticClass:\"l-content\"},[_c('h4',{staticStyle:{\"margin-block-start\":\"0em\",\"margin-block-end\":\"0em\"}},[_vm._v(\"设备详情\")])]),_c('div',{staticClass:\"r-content\"},[_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-close\",\"plain\":\"\",\"circle\":\"\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.colseDeviceInfo()}}})],1)]),_c('el-main',{staticStyle:{\"padding\":\"0px\",\"height\":\"calc(100vh - 100px)\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"属性\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"name-wrapper\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(_vm._s(scope.row.Key))])],1)]}}])}),_c('el-table-column',{attrs:{\"prop\":\"Value\",\"label\":\"值\",\"align\":\"center\"}})],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"home\" >\n    <!-- <div>TEST</div> -->\n    <el-container>\n      <el-main style=\"padding: 0px; height: calc(100vh - 60px);\">\n        <div id=\"container\"></div>\n      </el-main>\n      <el-aside width=\"300px\" v-show=\"isShowDeviceInfo\" >\n        <el-header style=\"display: flex;justify-content: space-between;align-items: center;height: 40px;\">\n          <div class=\"l-content\">\n            <h4 style=\"margin-block-start: 0em;margin-block-end: 0em;\">设备详情</h4>\n          </div>\n          <div class=\"r-content\">\n            <el-button type=\"danger\" icon=\"el-icon-close\" plain circle size=\"mini\" @click=\"colseDeviceInfo()\"></el-button>\n          </div>\n          \n          \n        </el-header>\n        <el-main style=\"padding: 0px; height: calc(100vh - 100px);\">\n          <el-table\n          :data=\"tableData\"\n          stripe\n          style=\"width: 100%\">\n          <el-table-column\n              label=\"属性\"\n              align=\"center\">\n              <template slot-scope=\"scope\">\n                <div slot=\"reference\" class=\"name-wrapper\">\n                  <el-tag size=\"mini\">{{ scope.row.Key }}</el-tag>\n                </div>\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"Value\"\n              label=\"值\"\n              align=\"center\">\n            </el-table-column>\n          </el-table>\n        </el-main>\n      </el-aside>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport dataLine from '@/data/line.js'\nimport {serverConfig} from '../utils/config.js'\nexport default {\n  data() {\n    return {\n      isShow: true,\n      ip:serverConfig.WebIP,\n      map: null,\n      mapPoints: [],\n      isShowDeviceInfo:false,\n      markerClusterer: [],\n      tableData: [{\n          Key: '设备名称',\n          Value: 'TEST1',\n        }, {\n          Key: '设备IP',\n          Value: '127.0.0.1'\n        }]\n    }\n  },\n  watch: {\n    //此时我监听的是对象，当$store.state.userInfo.Name发生修改时，此时需要深度监听才能监听到数据变化\n    \"$store.state.deviceList\":{\n      deep:true,//深度监听设置为 true\n      handler:function(){\n        // console.log(\"Map数据发生变化啦\") //修改数据时，能看到输出结果\n        // console.log(this.map.getOverlays())\n        // this.map.clearOverlays()\n        // console.log(this.map.getOverlays())\n        // this.mapPoints = []\n        // this.markerClusterer=null\n        // this.addMarker()\n      }\n    }\n  },\n  created() {\n    // console.log(dataLine)\n    \n    this.$nextTick(() => {\n      this.initMap()\n    this.addMarker()\n    })\n  },\n  mounted(){\n    \n  },\n  beforeDestroy(){\n\n  },\n  methods: {\n    initMap() {\n      let BMap = window.BMap\n      this.map = new BMap.Map('container')\n      // console.dir(this.map)\n      // console.log(\"andao\")121.549763,31.214069\n      let point = new BMap.Point(108.95872100,34.30958800) // 创建点坐标\n      this.map.centerAndZoom(point, 6) // 初始化地图，设置中心点坐标和地图级别\n      //添加地图类型控件\n      this.map.setMinZoom(4)\n      this.map.setMaxZoom(18)\n      this.map.enableScrollWheelZoom(true) //开启鼠标滚轮缩放\n      // 添加点\n      \n      // this.timer = setTimeout(() => {\n      // //需要定时执行的代码\n        \n      // }, 400)\n      // clearTimeout(timer)\n      // 添加线\n      // this.addLine()\n      // 添加郑州市的轮廓线\n      // this.addBorderLine()\n    },\n    addBorderLine() {\n      let BMap = window.BMap\n      let pointArr = []\n      dataLine.forEach((pointDetail) => {\n        var point = new BMap.Point(pointDetail.lng, pointDetail.lat) // 创建点坐标\n        pointArr.push(point)\n      })\n      let polyline = new BMap.Polyline(pointArr, {\n        strokeColor: 'red',\n        strokeWeight: 3,\n        strokeOpacity: 1,\n      })\n      this.map.addOverlay(polyline)\n    },\n    addLine() {\n      let BMap = window.BMap\n      let point = new BMap.Point(113.5001, 34.60468) // 创建点坐标\n      let point1 = new BMap.Point(113.7001, 34.62468) // 创建点坐标\n      let polyline = new BMap.Polyline([point, point1], {\n        strokeColor: 'red',\n        strokeWeight: 1,\n        strokeOpacity: 1,\n      })\n      this.map.addOverlay(polyline)\n    },\n    addMarker() {\n      let BMap = window.BMap\n      let BMapLib = window.BMapLib\n      // 初始化要显示的点的坐标\n      this.initPoints()\n      let mapMarkers = []\n      this.mapPoints.forEach((point,key) => {\n        let marker = new BMap.Marker(point,{\n          icon:new BMap.Icon(\"http://\"+ this.ip +\":8081/MapDownload/baidumaps/Flash-On.png\",new BMap.Size(64, 64))\n        })\n        mapMarkers.push(marker)\n        \n        const event =  'click'\n        \n        marker.addEventListener(event, e => {\n            var  out = []\n            this.tableData = []\n            switch (event) {\n                case 'click':\n                    // var res = marker.toString() +  '被单击!';\n                    break;\n            }\n            console.log(e)\n            console.log(point.lat)\n            console.log(point.lng)\n            console.log(this.$store.state.deviceList[key])\n            var obj = this.$store.state.deviceList[key]\n            \n            for (let k in obj) {\n              console.log(k, obj[k])\n              if(k === \"utc_time\"){\n                out.push({\n                  Key: k,\n                  Value: obj[k][0].toString() + '-' +\n                          obj[k][1].toString() + '-' +\n                          obj[k][2].toString() + ' ' +\n                          obj[k][3].toString() + ':' +\n                          obj[k][4].toString() + ':' +\n                          obj[k][5].toString(),\n                })\n                continue\n              }//部分数据需要单独处理\n              if(k === \"device_ip\"){\n                out.push({\n                  Key: k,\n                  Value:obj[k].split(\":\")[0] ,\n                })\n                continue\n              }\n              if(k === \"rssi_snr\"){\n                out.push({\n                  Key: \"rssi\",\n                  Value:obj[k][0] ,\n                })\n                out.push({\n                  Key: \"snr\",\n                  Value:obj[k][1] ,\n                })\n                continue\n              }\n              out.push({\n                Key: k,\n                Value: obj[k],\n              })\n            }\n            this.tableData = out\n            this.clickShowDeviceInfo();\n        });\n        this.map.addOverlay(marker)\n      })\n      let markerClusterer = new BMapLib.MarkerClusterer(this.map, {\n        markers: mapMarkers,\n        styles: [\n          {\n            url: 'http://'+ this.ip +':8081/MapDownload/baidumaps/并发数量.png',\n            size: new BMap.Size(64, 64),\n          },\n        ],\n      })\n      markerClusterer.setMinClusterSize(2)\n      this.markerClusterer = markerClusterer\n    },\n    //北斗初始计算坐标，不能直接食用\n    convertBDCoords(lat, lng) {\n      // 计算纬度\n      const latDegrees = Math.floor(lat / 100);\n      const latMinutes = lat % 100;\n      const latDecimal = latMinutes / 60;\n      const latitude = latDegrees + latDecimal;\n\n      // 计算经度\n      const lngDegrees = Math.floor(lng / 100);\n      const lngMinutes = lng % 100;\n      const lngDecimal = lngMinutes / 60;\n      const longitude = lngDegrees + lngDecimal;\n\n      return { latitude, longitude };\n    },\n    outOfChina(lat, lng) {\n      if (lng < 72.004 || lng > 137.8347) {\n        return true;\n      }\n      if (lat < 0.8293 || lat > 55.8271) {\n        return true;\n      }\n      return false;\n    },\n    transformLon(lon, lat) {\n      const pi = 3.1415926535897932384626;\n      var ret = 300.0 + lon + 2.0 * lat + 0.1 * lon * lon + 0.1 * lon * lat + 0.1 * Math.sqrt(Math.abs(lon));\n      ret += (20.0 * Math.sin(6.0 * lon * pi) + 20.0 * Math.sin(2.0 * lon * pi)) * 2.0 / 3.0;\n      ret += (20.0 * Math.sin(lon * pi) + 40.0 * Math.sin(lon / 3.0 * pi)) * 2.0 / 3.0;\n      ret += (150.0 * Math.sin(lon / 12.0 * pi) + 300.0 * Math.sin(lon / 30.0 * pi)) * 2.0 / 3.0;\n      return ret;\n    },\n    transformLat(x, y) {\n      // let pi = 3.1415926535897932384626;\n      let ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * Math.sqrt(Math.abs(x));\n      ret += (20.0 * Math.sin(6.0 * x * Math.PI) + 20.0 * Math.sin(2.0 * x * Math.PI)) * 2.0 / 3.0;\n      ret += (20.0 * Math.sin(y * Math.PI) + 40.0 * Math.sin(y / 3.0 * Math.PI)) * 2.0 / 3.0;\n      ret += (160.0 * Math.sin(y / 12.0 * Math.PI) + 320 * Math.sin(y * Math.PI / 30.0)) * 2.0 / 3.0;\n      return ret;\n    },\n    convertGpsToGcj02(gpsLat, gpsLng) {\n  // const pi = 3.1415926535897932384626;\n  const a = 6378245.0;\n  const ee = 0.00669342162296594323;\n    if (this.outOfChina(gpsLat, gpsLng)) {\n      return { gpsLat, gpsLng };\n    }\n    let dLat = this.transformLat(gpsLng - 105.0, gpsLat - 35.0);\n    let dLng = this.transformLon(gpsLng - 105.0, gpsLat - 35.0);\n    const radLat = gpsLat / 180.0 * Math.PI;\n    let magic = Math.sin(radLat);\n    magic = 1 - ee * magic * magic;\n    const sqrtMagic = Math.sqrt(magic);\n    dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * Math.PI);\n    dLng = (dLng * 180.0) / (a / sqrtMagic * Math.cos(radLat) * Math.PI);\n    const mgLat = gpsLat + dLat;\n    const mgLng = gpsLng + dLng;\n    return { lat: mgLat, lng: mgLng };\n    },\n    convertBdToBd09(bdLat, bdLng) {\n      const x = bdLng;\n      const y = bdLat;\n      const z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * Math.PI);\n      const theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * Math.PI);\n      const bd09Lng = z * Math.cos(theta) + 0.0065;\n      const bd09Lat = z * Math.sin(theta) + 0.006;\n      return { lat: bd09Lat, lng: bd09Lng };\n    },\n    initPoints() {\n      let BMap = window.BMap\n      for (let i = 0; i < this.$store.state.deviceList.length; i++) {\n        if (this.$store.state.deviceList[i].pos_latitude === 0 && this.$store.state.deviceList[i].pos_longitude === 0)continue\n\n        //北斗坐标转成GPS坐标\n        console.log(\"北斗坐标：\",this.$store.state.deviceList[i].pos_latitude/100000,this.$store.state.deviceList[i].pos_longitude/100000)\n        const coords = this.convertBDCoords(this.$store.state.deviceList[i].pos_latitude/100000, this.$store.state.deviceList[i].pos_longitude/100000);\n        // const coords = this.convertBDCoords(this.$store.state.deviceList[i].pos_longitude/100000, this.$store.state.deviceList[i].pos_latitude/100000);\n        console.log(\"GPS坐标：\",coords)\n        //GPS转换百度坐标\n        // 示例: 转换 GPS 坐标 (39.934, 116.329) 为百度 BD-09 坐标\n        const gcj02 = this.convertGpsToGcj02(coords.latitude, coords.longitude);\n        console.log(\"高德：\",gcj02); // { latitude: 24.49225517, longitude: 118.17967267 }\n        const bd09 = this.convertBdToBd09(gcj02.lat, gcj02.lng);//{lat: 23.131473552853414, lng: 113.38334364349777}\n        console.log(\"百度：\",bd09); // { lat: 24.492158936454798, lng: 118.17966584747752 }\n        //服了百度这个老六，非要lng 和lat换过来。不只是是我对齐你，还是我的问题？\n        var point = new BMap.Point(bd09.lng,bd09.lat) // 创建点坐标\n        \n        //添加到地图坐标点\n        this.mapPoints.push(point)\n      }\n    },\n    clickShowDeviceInfo(){\n      this.isShowDeviceInfo =!this.isShowDeviceInfo\n      // alert(res);\n    },\n    colseDeviceInfo(){\n      this.isShowDeviceInfo =!this.isShowDeviceInfo\n    }\n  },\n}\n</script>\n<style lang=\"scss\">\n.home{\n\n  #container {\n  height: calc(100vh - 60px);\n  width: auto;\n  // width: 100vw;\n  }\n}\n.BMap_mask{\n  width: auto;\n}\n\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HomeView.vue?vue&type=template&id=5de751d1&\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js&\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HomeView.vue?vue&type=style&index=0&id=5de751d1&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","function convertBDCoords(lat, lng) {\r\n  // 计算纬度\r\n  const latDegrees = Math.floor(lat / 100);\r\n  const latMinutes = lat % 100;\r\n  const latDecimal = latMinutes / 60;\r\n  const latitude = latDegrees + latDecimal;\r\n\r\n  // 计算经度\r\n  const lngDegrees = Math.floor(lng / 100);\r\n  const lngMinutes = lng % 100;\r\n  const lngDecimal = lngMinutes / 60;\r\n  const longitude = lngDegrees + lngDecimal;\r\n\r\n  return { latitude, longitude };\r\n}\r\n\r\n/**\r\n * 将北斗坐标转换成百度 BD-09 坐标\r\n * @param {number} bdLat 北斗纬度坐标\r\n * @param {number} bdLng 北斗经度坐标\r\n * @return {Object} 百度 BD-09 坐标\r\n */\r\n// function convertBdToBd09(bdLat, bdLng) {\r\n//   const x = bdLng;\r\n//   const y = bdLat;\r\n//   const z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * Math.PI);\r\n//   const theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * Math.PI);\r\n//   const bd09Lng = z * Math.cos(theta) + 0.0065;\r\n//   const bd09Lat = z * Math.sin(theta) + 0.006;\r\n//   return { lat: bd09Lat, lng: bd09Lng };\r\n// }\r\n\r\n// const pi = 3.1415926535897932384626;\r\n// const a = 6378245.0;\r\n// const ee = 0.00669342162296594323;\r\n\r\n/**\r\n * 判断是否在中国范围内\r\n * @param lat\r\n * @param lng\r\n * @returns {boolean}\r\n */\r\nfunction outOfChina(lat, lng) {\r\n  if (lng < 72.004 || lng > 137.8347) {\r\n    return true;\r\n  }\r\n  if (lat < 0.8293 || lat > 55.8271) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\nfunction transformLon(lon, lat) {\r\n  const pi = 3.1415926535897932384626;\r\n  var ret = 300.0 + lon + 2.0 * lat + 0.1 * lon * lon + 0.1 * lon * lat + 0.1 * Math.sqrt(Math.abs(lon));\r\n  ret += (20.0 * Math.sin(6.0 * lon * pi) + 20.0 * Math.sin(2.0 * lon * pi)) * 2.0 / 3.0;\r\n  ret += (20.0 * Math.sin(lon * pi) + 40.0 * Math.sin(lon / 3.0 * pi)) * 2.0 / 3.0;\r\n  ret += (150.0 * Math.sin(lon / 12.0 * pi) + 300.0 * Math.sin(lon / 30.0 * pi)) * 2.0 / 3.0;\r\n  return ret;\r\n}\r\nfunction transformLat(x, y) {\r\n  // let pi = 3.1415926535897932384626;\r\n  let ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * Math.sqrt(Math.abs(x));\r\n  ret += (20.0 * Math.sin(6.0 * x * Math.PI) + 20.0 * Math.sin(2.0 * x * Math.PI)) * 2.0 / 3.0;\r\n  ret += (20.0 * Math.sin(y * Math.PI) + 40.0 * Math.sin(y / 3.0 * Math.PI)) * 2.0 / 3.0;\r\n  ret += (160.0 * Math.sin(y / 12.0 * Math.PI) + 320 * Math.sin(y * Math.PI / 30.0)) * 2.0 / 3.0;\r\n  return ret;\r\n}\r\n/**\r\n * GPS 坐标转换成高德 GCJ-02 坐标\r\n * @param {number} gpsLat GPS 纬度坐标\r\n * @param {number} gpsLng GPS 经度坐标\r\n * @return {Object} 高德 GCJ-02 坐标\r\n */\r\nfunction convertGpsToGcj02(gpsLat, gpsLng) {\r\n  // const pi = 3.1415926535897932384626;\r\n  const a = 6378245.0;\r\n  const ee = 0.00669342162296594323;\r\n  if (outOfChina(gpsLat, gpsLng)) {\r\n    return { gpsLat, gpsLng };\r\n  }\r\n  let dLat = transformLat(gpsLng - 105.0, gpsLat - 35.0);\r\n  let dLng = transformLon(gpsLng - 105.0, gpsLat - 35.0);\r\n  const radLat = gpsLat / 180.0 * Math.PI;\r\n  let magic = Math.sin(radLat);\r\n  magic = 1 - ee * magic * magic;\r\n  const sqrtMagic = Math.sqrt(magic);\r\n  dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * Math.PI);\r\n  dLng = (dLng * 180.0) / (a / sqrtMagic * Math.cos(radLat) * Math.PI);\r\n  const mgLat = gpsLat + dLat;\r\n  const mgLng = gpsLng + dLng;\r\n  return { lat: mgLat, lng: mgLng };\r\n}\r\n\r\nfunction convertBdToBd09(bdLat, bdLng) {\r\n  const x = bdLng;\r\n  const y = bdLat;\r\n  const z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * Math.PI);\r\n  const theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * Math.PI);\r\n  const bd09Lng = z * Math.cos(theta) + 0.0065;\r\n  const bd09Lat = z * Math.sin(theta) + 0.006;\r\n  return { lat: bd09Lat, lng: bd09Lng };\r\n}\r\n\r\n\r\n\r\n\r\n// 示例: 转换北斗坐标值 2429.53531, 11810.78036\r\nconst coords = convertBDCoords(2307.69398, 11322.26324);\r\nconsole.log(coords); // { latitude: 24.49225517, longitude: 118.17967267 }\r\n\r\n// 示例: 转换 GPS 坐标 39.938133, 116.397391 到高德 GCJ-02 坐标\r\nconst gcj02 = convertGpsToGcj02(coords.latitude, coords.longitude);\r\nconsole.log(gcj02); // { lat: 39.9357828013439, lng: 116.403038346678 }\r\n\r\n\r\n// 示例: 将北斗坐标 (24.49225517, 118.17967267) 转换为百度 BD-09 坐标\r\nconst bd09 = convertBdToBd09(gcj02.lat, gcj02.lng);//{lat: 23.131473552853414, lng: 113.38334364349777}\r\nconsole.log(bd09); // { lat: 24.492158936454798, lng: 118.17966584747752 }\r\n// 示例: 将北斗坐标 (24.49225517, 118.17967267) 转换成百度 BD-09 坐标\r\n// const bd09 = convertBdToBd09(coords.latitude, coords.longitude);\r\n// console.log(bd09); // { lat: 24.49208857660129, lng: 118.17994444893987 }"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","attrs","directives","name","rawName","value","isShowDeviceInfo","expression","_v","on","$event","colseDeviceInfo","tableData","scopedSlots","_u","key","fn","scope","slot","_s","row","Key","staticRenderFns","data","isShow","ip","map","mapPoints","markerClusterer","Value","watch","deep","handler","created","mounted","beforeDestroy","methods","initMap","addBorderLine","dataLine","pointArr","strokeColor","strokeWeight","strokeOpacity","addLine","addMarker","icon","mapMarkers","marker","console","out","obj","markers","styles","url","size","convertBDCoords","latitude","longitude","outOfChina","transformLon","ret","transformLat","convertGpsToGcj02","gpsLat","gpsLng","magic","dLat","dLng","lat","lng","convertBdToBd09","initPoints","clickShowDeviceInfo","component","latDegrees","Math","floor","latMinutes","latDecimal","lngDegrees","lngMinutes","lngDecimal","lon","pi","sqrt","abs","sin","x","y","PI","a","ee","radLat","sqrtMagic","cos","mgLat","mgLng","bdLat","bdLng","z","theta","atan2","bd09Lng","bd09Lat","coords","log","gcj02","bd09"],"sourceRoot":""}