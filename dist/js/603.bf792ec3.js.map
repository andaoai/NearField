{"version":3,"file":"js/603.bf792ec3.js","mappings":"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","sources":["webpack://web-system/./src/views/VideoView.vue","webpack://web-system/src/views/VideoView.vue","webpack://web-system/./src/views/VideoView.vue?4425","webpack://web-system/./src/views/VideoView.vue?523c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"video-css\"},[_c('el-container',[_c('el-main',{staticStyle:{\"padding\":\"0px\",\"height\":\"calc(100vh - 60px)\"}},[_c('el-header',{staticStyle:{\"text-align\":\"-webkit-center\",\"height\":\"30px\",\"margin\":\"10px\"}},[_c('el-button',{attrs:{\"type\":_vm.ViewSatus ? 'danger' : 'primary',\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-video-play\",\"autofocus\":false},on:{\"click\":function($event){return _vm.handleViewSatus()}}},[_vm._v(\" 预览 \")]),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.checkTimerVideoTaskStatus()),expression:\"checkTimerVideoTaskStatus()\"}],attrs:{\"type\":\"primary\",\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-video-camera\",\"autofocus\":true},on:{\"click\":function($event){return _vm.handleTimingTecordingTimeOpen()}}},[_vm._v(\"定时录制\")]),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.checkTimerVideoTaskStatus()),expression:\"!checkTimerVideoTaskStatus()\"}],attrs:{\"type\":\"danger\",\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-video-camera\",\"autofocus\":true},on:{\"click\":function($event){return _vm.handleStopTimedVideoTask()}}},[_vm._v(\"等待录制结束，点击停止\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-download\",\"loading\":false},on:{\"click\":function($event){_vm.LocalFilesDialogVisible = true}}},[_vm._v(\" 批量回传 \")]),_c('el-button',{attrs:{\"type\":_vm.VideoRecordingStatus? 'danger' : 'primary',\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-bell\",\"loading\":false},on:{\"click\":function($event){return _vm.handleVideoRecordingStatus()}}},[_vm._v(\"录制\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-folder\"},on:{\"click\":function($event){return _vm.handleOpenLocalFlie()}}},[_vm._v(\"本地存储\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-time\"},on:{\"click\":function($event){return _vm.handleTimeSyn()}}},[_vm._v(\"时间同步 \")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"round\":\"\",\"icon\":\"el-icon-time\"},on:{\"click\":function($event){return _vm.DeviceList()}}},[_vm._v(\" \"+_vm._s(this.showDevice ? \"收缩相机列表\" : \"展开相机列表\")+\" \")])],1),(!_vm.showBigVideo)?_c('el-main',{staticStyle:{\"padding\":\"0px\",\"overflow\":\"hidden\",\"height\":\"calc(100vh - 170px)\",\"width\":\"100%\"}},[(_vm.VideoView.length === 0)?_c('el-empty',{attrs:{\"description\":\"无设备上线，请稍后。。。\"}}):_vm._e(),_vm._l((_vm.VideoView),function(batchVideo,Videopage){return _c('div',{key:'' + Videopage,staticClass:\"video-main\"},[((Videopage + 1) === _vm.nowpage)?_c('div',{staticStyle:{\"height\":\"calc(100vh - 170px)\"}},_vm._l((batchVideo),function(rowVideo,rowNum){return _c('div',{key:rowNum,staticClass:\"video-main\",staticStyle:{\"display\":\"flex\",\"height\":\"33.33333333333333333%\"}},_vm._l((rowVideo),function(Video,Num){return _c('div',{key:Num,staticStyle:{\"width\":\"33.33333333333333333%\"}},[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[_c('object',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.timingDialogVisible),expression:\"!timingDialogVisible\"}],attrs:{\"type\":\"application/x-vlc-plugin\",\"id\":'vlc-' + Videopage + '-' + rowNum + '-' + Num,\"events\":\"True\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('param',{attrs:{\"name\":\"volume\",\"value\":\"50\"}}),_c('param',{attrs:{\"name\":\"autoplay\",\"value\":\"true\"}}),_c('param',{attrs:{\"name\":\"loop\",\"value\":\"false\"}}),_c('param',{attrs:{\"name\":\"fullscreen\",\"value\":\"false\"}}),_c('param',{attrs:{\"name\":\"controls\",\"value\":\"false\"}})])])])}),0)}),0):_vm._e()])})],2):_vm._e(),(_vm.showBigVideo)?_c('el-main',{staticStyle:{\"padding\":\"0px\",\"overflow\":\"hidden\",\"height\":\"calc(100vh - 120px)\"}},[_c('object',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.timingDialogVisible),expression:\"!timingDialogVisible\"}],attrs:{\"type\":\"application/x-vlc-plugin\",\"id\":'FullScreen',\"events\":\"True\",\"width\":\"100%\",\"height\":\"100%\"}},[_c('param',{attrs:{\"name\":\"volume\",\"value\":\"50\"}}),_c('param',{attrs:{\"name\":\"autoplay\",\"value\":\"true\"}}),_c('param',{attrs:{\"name\":\"loop\",\"value\":\"false\"}}),_c('param',{attrs:{\"name\":\"fullscreen\",\"value\":\"false\"}}),_c('param',{attrs:{\"name\":\"controls\",\"value\":\"false\"}})])]):_vm._e(),(!_vm.showBigVideo)?_c('el-footer',[_c('el-pagination',{staticStyle:{\"margin\":\"0px 0px\",\"height\":\"4%\",\"text-align-last\":\"center\",\"padding\":\"18px 5px\"},attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"page-size\":9,\"total\":this.$store.state.deviceList.length},on:{\"current-change\":_vm.handleCurrentChange}})],1):_vm._e()],1),_c('el-aside',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showDevice),expression:\"showDevice\"}],staticStyle:{\"padding\":\"0px\",\"height\":\"calc(100vh - 60px)\"},attrs:{\"width\":\"400px\"}},[_vm._l((this.$store.state.downLoadStatus),function(item,key){return _c('div',{key:key,staticStyle:{\"width\":\"100%\"}},[(!item.done)?_c('div',[_c('el-progress',{staticClass:\"my-progress-bar\",attrs:{\"text-inside\":true,\"stroke-width\":26,\"percentage\":Math.ceil((item.progress / item.total) * 100),\"status\":\"exception\",\"format\":percentage => _vm.formatText(percentage, item.file_name, item.total),\"color\":\"#c03838\"}})],1):_vm._e()])}),_c('el-main',{staticClass:\"test\",staticStyle:{\"padding\":\"0px\",\"height\":\"95%\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":this.$store.state.deviceList}},[_c('el-table-column',{attrs:{\"label\":\"相机列表\",\"align\":\"center\",\"width\":\"150\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-popover',{attrs:{\"trigger\":\"hover\",\"placement\":\"top\"}},[_c('p',[_vm._v(\"GoProIP: \"+_vm._s(scope.row.gopro_ip))]),_c('div',{staticClass:\"name-wrapper\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[_c('el-tag',{attrs:{\"size\":\"medium\"}},[_vm._v(_vm._s(scope.row.device_name))])],1)])]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"下载最新文件\",\"placement\":\"right-end\"}},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"warning\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":function($event){return _vm.handleReturnVideo(scope.$index, scope.row)}}},[_vm._v(\"回传\")])],1),_c('el-button',{attrs:{\"size\":\"mini\",\"round\":\"\"},on:{\"click\":function($event){return _vm.clickFullscreen(scope.$index, scope.row)}}},[_vm._v(\"全屏\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"success\",\"round\":\"\",\"plain\":\"\"},on:{\"click\":function($event){return _vm.handleReturnVideoFileList(scope.$index, scope.row)}}},[_vm._v(\"文件\")])]}}])})],1)],1)],2)],1),_c('el-dialog',{attrs:{\"title\":\"设置定时录制视频\",\"visible\":_vm.timingDialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.timingDialogVisible=$event}}},[_c('div',{staticClass:\"block\"},[_c('el-date-picker',{attrs:{\"type\":\"datetimerange\",\"range-separator\":\"至\",\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\"},model:{value:(_vm.timingTecordingTimeValue1),callback:function ($$v) {_vm.timingTecordingTimeValue1=$$v},expression:\"timingTecordingTimeValue1\"}})],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.timingDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handletimingTecordingTime()}}},[_vm._v(\"保 存\")])],1)]),_c('el-dialog',{attrs:{\"title\":\"本地文件存储\",\"visible\":_vm.localFileStorageDialogTableVisible,\"width\":\"60%\"},on:{\"update:visible\":function($event){_vm.localFileStorageDialogTableVisible=$event}}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.VideoFilesTableData}},[_c('el-table-column',{attrs:{\"prop\":\"Name\",\"label\":\"文件名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"ModTime\",\"label\":\"创建日期\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(scope.row.ModTime.split(\".\")[0])+\" \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"Size\",\"label\":\"文件大小\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\" \"+_vm._s(_vm.bytesToSize(parseInt(scope.row.Size)))+\" \")]}}])}),_c('el-table-column',{attrs:{\"prop\":\"address\",\"label\":\"操作\",\"width\":\"300\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.openRenameLacolVideoFile(scope.row.Name)}}},[_vm._v(\" 重命名 \")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleRemoveLocalVideoFile(scope.row.Name)}}},[_vm._v(\"删除 \")])]}}])})],1)],1),_c('el-dialog',{attrs:{\"title\":this.GoProFileTable.GoProIP + '-视频文件',\"visible\":_vm.ReturnVideoFileListdialogTableVisible,\"width\":\"60%\"},on:{\"update:visible\":function($event){_vm.ReturnVideoFileListdialogTableVisible=$event}}},[_c('el-table',{attrs:{\"data\":_vm.GoProFileTable.FileList}},[_c('el-table-column',{attrs:{\"property\":\"n\",\"label\":\"文件名称\",\"width\":\"auto\"}}),_c('el-table-column',{attrs:{\"property\":\"cre\",\"label\":\"创建日期\",\"width\":\"auto\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(new Date(scope.row.cre * 1000).toISOString()))]}}])}),_c('el-table-column',{attrs:{\"property\":\"s\",\"label\":\"文件大小\",\"width\":\"auto\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.bytesToSize(parseInt(scope.row.s))))]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"auto\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleReturnOneVideoFile(scope.row)}}},[_vm._v(\"下载 \")])]}}])})],1)],1),_c('el-dialog',{attrs:{\"title\":\"批量回传\",\"visible\":_vm.LocalFilesDialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.LocalFilesDialogVisible=$event}}},[_c('span',[_c('el-checkbox',{attrs:{\"indeterminate\":_vm.isIndeterminate},on:{\"change\":_vm.handleCheckAllChange},model:{value:(_vm.checkAll),callback:function ($$v) {_vm.checkAll=$$v},expression:\"checkAll\"}},[_vm._v(\"全选 \")]),_c('div',{staticStyle:{\"margin\":\"15px 0\"}}),_c('el-checkbox-group',{on:{\"change\":_vm.handleCheckedCitiesChange},model:{value:(_vm.DownloadLatestFileFromSelectedDevice),callback:function ($$v) {_vm.DownloadLatestFileFromSelectedDevice=$$v},expression:\"DownloadLatestFileFromSelectedDevice\"}},_vm._l((_vm.cities),function(city){return _c('el-checkbox',{key:city,attrs:{\"label\":city}},[_vm._v(_vm._s(city))])}),1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.LocalFilesDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleBatchVideoBack()}}},[_vm._v(\"确 定\")])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"video-css\">\n        <el-container>\n            <el-main style=\"padding: 0px; height: calc(100vh - 60px);\">\n                <el-header style=\"text-align: -webkit-center; height: 30px; margin: 10px;\">\n\n                    <el-button :type=\"ViewSatus ? 'danger' : 'primary'\" size=\"small\" round icon=\"el-icon-video-play\"\n                        :autofocus=\"false\" @click=\"handleViewSatus()\">\n                        预览\n                    </el-button>\n                    <el-button v-show=\"checkTimerVideoTaskStatus()\" type=\"primary\" size=\"small\" round icon=\"el-icon-video-camera\" :autofocus=\"true\"\n                        @click=\"handleTimingTecordingTimeOpen()\">定时录制</el-button>\n                    <el-button v-show=\"!checkTimerVideoTaskStatus()\" type=\"danger\" size=\"small\" round icon=\"el-icon-video-camera\" :autofocus=\"true\"\n                        @click=\"handleStopTimedVideoTask()\">等待录制结束，点击停止</el-button>\n                    <el-button type=\"primary\" size=\"small\" round icon=\"el-icon-download\" :loading=\"false\"\n                        @click=\"LocalFilesDialogVisible = true\">\n                        批量回传\n                    </el-button>\n                    <el-button :type=\"VideoRecordingStatus? 'danger' : 'primary'\" size=\"small\" round\n                        icon=\"el-icon-bell\" :loading=\"false\" @click=\"handleVideoRecordingStatus()\">录制</el-button>\n                    <el-button type=\"primary\" size=\"small\" round icon=\"el-icon-folder\"\n                        @click=\"handleOpenLocalFlie()\">本地存储</el-button>\n                    <el-button type=\"primary\" size=\"small\" round icon=\"el-icon-time\" @click=\"handleTimeSyn()\">时间同步\n                    </el-button>\n                    <el-button type=\"primary\" size=\"small\" round icon=\"el-icon-time\" @click=\"DeviceList()\">\n                        {{ this.showDevice ? \"收缩相机列表\" : \"展开相机列表\" }}\n                    </el-button>\n                </el-header>\n                <el-main v-if=\"!showBigVideo\"\n                    style=\"padding: 0px;overflow: hidden;height: calc(100vh - 170px);width: 100%;\">\n                    <el-empty v-if=\"VideoView.length === 0\" description=\"无设备上线，请稍后。。。\"></el-empty>\n                    <div v-for=\"batchVideo, Videopage in VideoView\" class=\"video-main\" :key=\"'' + Videopage\">\n                        <div v-if=\"(Videopage + 1) === nowpage\" style=\"height: calc(100vh - 170px);\">\n                            <div v-for=\"rowVideo, rowNum in batchVideo\" class=\"video-main\" :key=\"rowNum\"\n                                style=\"display: flex;height: 33.33333333333333333%;\">\n                                <div v-for=\"Video, Num in rowVideo\" :key=\"Num\" style=\"width: 33.33333333333333333%;\">\n                                    <div style=\"width:100%;height:100%;\">\n                                        <object type='application/x-vlc-plugin'\n                                            :id=\"'vlc-' + Videopage + '-' + rowNum + '-' + Num\" events='True'\n                                            width=\"100%\" height=\"100%\" v-show=\"!timingDialogVisible\">\n                                            <!-- <param name='mrl' :value=\"'udp://@0.0.0.0:13000'\" /> -->\n                                            <param name='volume' value='50' />\n                                            <param name='autoplay' value='true' />\n                                            <param name='loop' value='false' />\n                                            <param name='fullscreen' value='false' />\n                                            <param name='controls' value='false' />\n                                        </object>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <video autoplay controls\n                               :id=\"item1+'-'+item\" \n                               @click=\"clickVideo(item1+'-'+item)\"></video> -->\n                </el-main>\n                <el-main v-if=\"showBigVideo\" style=\"padding: 0px;overflow: hidden;height: calc(100vh - 120px);\">\n                    <object type='application/x-vlc-plugin' \n                        :id=\"'FullScreen'\"\n                        events='True' width=\"100%\" height=\"100%\" v-show=\"!timingDialogVisible\">\n                        <!-- <param name='mrl' value='udp://@172.25.149.52:8554' /> -->\n                        <!-- <param name='mrl' :value=\"'udp://@0.0.0.0:13000'\" /> -->\n                        <param name='volume' value='50' />\n                        <param name='autoplay' value='true' />\n                        <param name='loop' value='false' />\n                        <param name='fullscreen' value='false' />\n                        <param name='controls' value='false' />\n                    </object>\n                </el-main>\n                <el-footer v-if=\"!showBigVideo\">\n                    <!-- <div style=\"margin:0px 0px;height: 4%;text-align-last: center;\"> -->\n                    <el-pagination background layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\"\n                        :page-size=\"9\" :total=\"this.$store.state.deviceList.length\"\n                        style=\"margin:0px 0px;height: 4%;text-align-last: center;padding: 18px 5px\">\n                    </el-pagination>\n                    <!-- </div> -->\n                </el-footer>\n            </el-main>\n\n            <el-aside width=\"400px\" style=\"padding: 0px;height: calc(100vh - 60px);\" v-show=\"showDevice\">\n                <div v-for=\"item, key in this.$store.state.downLoadStatus\" :key=\"key\" style=\"width: 100%;\">\n                    <div v-if=\"!item.done\">\n                        <!-- 这里是视频下载的进度条，目前有Bug -->\n                        <el-progress :text-inside=\"true\" :stroke-width=\"26\"\n                            :percentage=\"Math.ceil((item.progress / item.total) * 100)\" status=\"exception\"\n                            :format=\"percentage => formatText(percentage, item.file_name, item.total)\" color=\"#c03838\"\n                            class=\"my-progress-bar\"></el-progress>\n\n                    </div>\n                </div>\n                <el-main style=\"padding: 0px;height: 95%\" class=\"test\">\n\n                    <el-table :data=\"this.$store.state.deviceList\" style=\"width: 100%;\">\n                        <el-table-column label=\"相机列表\" align=\"center\" width=\"150\">\n                            <template slot-scope=\"scope\">\n                                <el-popover trigger=\"hover\" placement=\"top\">\n                                    <p>GoProIP: {{ scope.row.gopro_ip }}</p>\n                                    <!-- <p>设备IP: {{ scope.row.device_ip }}</p> -->\n                                    <div slot=\"reference\" class=\"name-wrapper\">\n                                        <el-tag size=\"medium\">{{ scope.row.device_name }}</el-tag>\n                                    </div>\n                                </el-popover>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"操作\" align=\"center\">\n                            <template slot-scope=\"scope\">\n                                <el-tooltip class=\"item\" effect=\"dark\" content=\"下载最新文件\" placement=\"right-end\">\n                                    <el-button size=\"mini\" type=\"warning\" round plain\n                                        @click=\"handleReturnVideo(scope.$index, scope.row)\">回传</el-button>\n                                </el-tooltip>\n                                <el-button size=\"mini\" round\n                                    @click=\"clickFullscreen(scope.$index, scope.row)\">全屏</el-button>\n                                <el-button size=\"mini\" type=\"success\" round plain\n                                    @click=\"handleReturnVideoFileList(scope.$index, scope.row)\">文件</el-button>\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </el-main>\n                <!-- <el-footer>\n                    <div style=\"margin:5px 5px;height: 4%;text-align-last: center;\">\n                    <el-pagination\n                    background\n                    layout=\"prev, pager, next\"\n                    :total=\"30\">\n                    </el-pagination>\n                </div>\n                </el-footer> -->\n\n            </el-aside>\n\n        </el-container>\n        <!-- 设置定时录制视频弹窗 -->\n        <el-dialog title=\"设置定时录制视频\" :visible.sync=\"timingDialogVisible\" width=\"30%\">\n            <div class=\"block\">\n                <!-- <span class=\"demonstration\">默认</span> -->\n                <el-date-picker v-model=\"timingTecordingTimeValue1\" type=\"datetimerange\" range-separator=\"至\"\n                    start-placeholder=\"开始日期\" end-placeholder=\"结束日期\">\n                </el-date-picker>\n            </div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"timingDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"handletimingTecordingTime()\">保 存</el-button>\n            </span>\n        </el-dialog>\n        <!-- 本地文件存储弹窗 -->\n        <el-dialog title=\"本地文件存储\" :visible.sync=\"localFileStorageDialogTableVisible\" width=\"60%\">\n            <el-table :data=\"VideoFilesTableData\" style=\"width: 100%\">\n                <el-table-column prop=\"Name\" label=\"文件名称\" width=\"180\">\n                </el-table-column>\n                <el-table-column prop=\"ModTime\" label=\"创建日期\" width=\"180\">\n                    <template slot-scope=\"scope\">\n                        {{ scope.row.ModTime.split(\".\")[0] }}\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"Size\" label=\"文件大小\">\n                    <template slot-scope=\"scope\">\n                        {{ bytesToSize(parseInt(scope.row.Size)) }}\n                    </template>\n\n                </el-table-column>\n                <el-table-column prop=\"address\" label=\"操作\" width=\"300\">\n                    <template slot-scope=\"scope\">\n\n\n                        <!-- <el-button size=\"mini\" type=\"primary\" @click=\"handleReturnVideo(scope.$index, scope.row)\">视频下载</el-button> -->\n                        <!-- <el-button size=\"mini\" type=\"primary\" @click=\"handleViewLocalFiles(scope.row.Name)\">{{ ('观看视频')\n                        }}\n                \n                        </el-button> -->\n                        <el-button size=\"mini\" type=\"primary\" @click=\"openRenameLacolVideoFile(scope.row.Name)\">\n                            <!-- @click=\"handleReturnVideo(scope.$index, scope.row)\" -->\n                            重命名\n                        </el-button>\n                        <el-button size=\"mini\" type=\"danger\" @click=\"handleRemoveLocalVideoFile(scope.row.Name)\">删除\n                        </el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-dialog>\n        <!-- 视频文件弹窗 -->\n        <el-dialog :title=\"this.GoProFileTable.GoProIP + '-视频文件'\" :visible.sync=\"ReturnVideoFileListdialogTableVisible\"\n            width=\"60%\">\n            <el-table :data=\"GoProFileTable.FileList\">\n                <el-table-column property=\"n\" label=\"文件名称\" width=\"auto\"></el-table-column>\n                <el-table-column property=\"cre\" label=\"创建日期\" width=\"auto\">\n                    <template slot-scope=\"scope\">{{ new Date(scope.row.cre * 1000).toISOString() }}</template>\n                </el-table-column>\n\n                <!-- new Date(1669651324000); -->\n                <el-table-column property=\"s\" label=\"文件大小\" width=\"auto\">\n                    <template slot-scope=\"scope\">{{ bytesToSize(parseInt(scope.row.s)) }}</template>\n                    <!-- <template slot-scope=\"scope\">{{scope.row.s}}</template> -->\n                </el-table-column>\n                <!-- <el-table-column property=\"address\" label=\"地址\"></el-table-column> -->\n                <el-table-column label=\"操作\" width=\"auto\">\n                    <template slot-scope=\"scope\">\n                        <el-button size=\"mini\" type=\"primary\" @click=\"handleReturnOneVideoFile(scope.row)\">下载\n                            <!-- @click=\"handleReturnVideo(scope.$index, scope.row)\" -->\n                            <!-- <a @click=\"handleReturnVideo(scope.$index, scope.row)\"></a> -->\n                        </el-button>\n\n                        <!-- <el-button size=\"mini\" type=\"primary\" @click=\"handleReturnVideo(scope.$index, scope.row)\">视频下载</el-button> -->\n                        <!-- <el-button size=\"mini\" type=\"primary\" @click=\"handleWatchVideo(scope.$index, scope.row)\">观看视频\n                        </el-button> -->\n                        <!-- <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\">删除\n                        </el-button> -->\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-dialog>\n        <!-- 批量回传 -->\n        <el-dialog title=\"批量回传\" :visible.sync=\"LocalFilesDialogVisible\" width=\"30%\">\n            <!-- <span></span> -->\n            <span>\n                <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">全选\n                </el-checkbox>\n                <div style=\"margin: 15px 0;\"></div>\n                <el-checkbox-group v-model=\"DownloadLatestFileFromSelectedDevice\" @change=\"handleCheckedCitiesChange\">\n                    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{ city }}</el-checkbox>\n                </el-checkbox-group>\n            </span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"LocalFilesDialogVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"handleBatchVideoBack()\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n\n</template>\n\n<script>\nimport { SetDeviceTimeSYNC,OpenFolder,TimedVideoTask,TimedVideoTaskCancel,SearchDeviceInfo, DownloadFile, GetGoProMediaList, SetGoProShutter, RenameLocalVideoFile, RemoveLocalVideoFile, DeviceControlWebcamStart, DeviceControlWebcamStop } from '@/api'\nimport { serverConfig } from '../utils/config.js'\n// import { ElProgress } from 'element-ui';\n// var shell = require('shelljs');\n// const { exec } = require('child_process')\nexport default {\n    data() {\n        return {\n            intervalID:null,//用于存储画面刷新时间的定时任务id\n            ViewSatus: false,\n            VideoRecordingStatus: false,\n            timingTecordingTimeValue1: [new Date(), new Date()+3600],\n\n            timingDialogVisible: false,\n            dialogTableVisible: false,\n            LocalFilesDialogVisible: false,\n            ReturnVideoFileListdialogTableVisible: false,\n            localFileStorageDialogTableVisible: false,\n\n            // <!-- 本地文件弹窗数据 -->\n            checkAll: false,\n            DownloadLatestFileFromSelectedDevice: [],\n            cities: [],\n            isIndeterminate: true,\n\n\n            showBigVideo: false,\n            BigVideoID: null,\n            showDevice: true,//展开收缩相机列表\n            VideoFilesTableData: null,\n            DevTableData: this.$store.state.deviceList,\n            GoProFileTable: { GoProIP: null, DeviceName: null, FileList: null },\n            VideoView: [],//显示九个的list 的视频数组\n            flvVideoList: [],\n            nowpage: 1\n        }\n    },\n    methods: {\n        \n        initVideo() {\n            var data = this.$store.state.deviceList\n            let outdata = []\n            let result = [], num = 3;\n            for (let i = 0, len = data.length, j = 0; i < len; i += num) {\n                result.push(data.slice(i, i + num));\n                if (j >= 2) {\n                    outdata.push(result)\n                    console.log(j)\n                    result = []\n                    j = 0\n                    continue\n                }\n                j += 1\n\n            }\n            if (result.length > 0) {\n                outdata.push(result)\n            }\n            // console.log(data)\n            // console.log(outdata)\n            return outdata\n\n        },\n        // 检测浏览器是否支持 flv.js\n        //ffmpeg -i \"udp://@0.0.0.0:8554?overrun_nonfatal=1&fifo_size=5000000\" -vcodec libx264 -f flv rtmp://localhost:1935/live/rfBd56ti2SMtYvSgD5xAV0YU99zampta7Z7S575KLkIZ9PYk\n        clickVideo(item) {\n            this.showBigVideo = !this.showBigVideo\n            this.BigVideoID = item\n            console.log(item)\n        },\n        handleViewLocalFiles(val) {\n            // serverConfig.ServerIP\n            window.open('http://' + serverConfig.ServerIP + ':8081/VideoDownload/' + val, \"_blank\");\n            // console.log('http://'+serverConfig.ServerIP+':8081/VideoDownload/'+val)\n        },\n        handleTimingTecordingTimeOpen(){\n            if (this.ViewSatus === false && this.VideoRecordingStatus === false && this.showBigVideo == false) {\n                this.timingDialogVisible = true\n            } else {\n                if (this.ViewSatus){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭所有设备视频预览',\n                    });\n                }\n                if (this.VideoRecordingStatus){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭所有设备视频录制',\n                    });\n                }\n                if(this.showBigVideo){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭全屏',\n                    });\n                }\n                \n            }\n        },\n        handletimingTecordingTime() {\n            console.log(this.timingTecordingTimeValue1[0].getTime()/1000)\n            console.log(this.timingTecordingTimeValue1[1].getTime()/1000)\n            \n            this.$store.state.TimedVideoTaskStateWebSocket = [ this.timingTecordingTimeValue1[0].getTime(),this.timingTecordingTimeValue1[1].getTime()]\n            TimedVideoTask(parseInt(this.timingTecordingTimeValue1[0].getTime()/1000),parseInt(this.timingTecordingTimeValue1[1].getTime()/1000))\n            this.timingDialogVisible = false\n        },\n        handleStopTimedVideoTask(){\n            TimedVideoTaskCancel()\n        },\n        handleBatchVideoBack() {\n            // 隐藏对话框\n            this.LocalFilesDialogVisible = false;\n\n            // 获取选中的设备列表\n            const selectedDevices = this.DownloadLatestFileFromSelectedDevice;\n\n            // 遍历选中的设备\n            selectedDevices.forEach((deviceName) => {\n                // 从设备列表中获取指定设备\n                const result = this.$store.state.deviceList.filter((item) => item.device_name === deviceName);\n                const device = result.find((item) => item.device_name === deviceName);\n\n                // 获取 GoPro 上的文件列表\n                GetGoProMediaList(device.gopro_ip).then((response) => {\n                    // 获取最后一个文件\n                    const lastFile = response.data.media[0].fs[response.data.media[0].fs.length - 1].n;\n\n                    // 下载最后一个文件\n                    DownloadFile(device.gopro_ip, lastFile, `${device.device_name}_${lastFile}`);\n                });\n            });\n        },\n        handleOpenLocalFlie() {\n            // shell.exec('start \"\" \"C:\\\\Users\"')\n            // exec('start C:\\\\Users')\n            OpenFolder()\n            console.log(\"handleOpenLocalFlie\")\n            // this.localFileStorageDialogTableVisible = true\n            // GetLocalVideoFileList().then((response) => {\n            //     console.log(response.data)\n            //     this.VideoFilesTableData = response.data\n            // })\n        },\n        bytesToSize(bytes) {\n            if (bytes === 0) return '0 B';\n            var k = 1000, // or 1024\n                sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n                i = Math.floor(Math.log(bytes) / Math.log(k));\n\n            return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n        },\n        handleCurrentChange(val) {\n            console.log(`当前页: ${val}`);\n            console.log(val);\n            this.nowpage = val\n\n            return val\n        },\n        handleEdit(index, row) {\n            console.log(index, row);\n        },\n        handleReturnVideo(index, row) {\n\n            console.log(\"handleReturnVideo\")\n            // console.log(this.GoProFileTable.GoProIP)\n            // console.log(row)    \n            GetGoProMediaList(row.gopro_ip).then((response) => {\n\n                console.log(response.data.media[0].fs[response.data.media[0].fs.length - 1].n)\n                var file = response.data.media[0].fs[response.data.media[0].fs.length - 1].n\n                DownloadFile(row.gopro_ip, file, row.device_name + '_' + file)\n            })\n            // this.downloadFile(\"http://\"+this.GoProFileTable.GoProIP+\":8080/videos/DCIM/100GOPRO/\"+row.n)\n            // window.open(\"http://\" + this.GoProFileTable.GoProIP + \":8080/videos/DCIM/100GOPRO/\" + row.n)\n            // return \"http://\"+this.GoProFileTable.GoProIP+\":8080/videos/DCIM/100GOPRO/\"+row.n\n\n        },\n        handleWatchVideo(index, row) {\n            //http://10.5.5.9:8080/videos/DCIM/100GOPRO/GOPR0001.JPG\n            window.open('http://' + this.GoProFileTable.GoProIP + '/videos/DCIM/100GOPRO/' + row.n, \"_blank\");\n            // console.log(\"handleWatchVideo\")\n            console.log(this.GoProFileTable.GoProIP)\n            console.log(row.n)\n        },\n        handleReturnVideoFileList(index, row) {\n            this.GoProFileTable.FileList = null\n            this.GoProFileTable.GoProIP = null\n            this.GoProFileTable.DeviceName = null\n\n            this.ReturnVideoFileListdialogTableVisible = true\n            console.log(\"handleReturnVideoFileList\")\n            console.log(index, row);\n            GetGoProMediaList(row.gopro_ip).then((response) => {\n                console.log(response.data.media[0].fs)\n                this.GoProFileTable.FileList = response.data.media[0].fs\n                this.GoProFileTable.GoProIP = row.gopro_ip\n                this.GoProFileTable.DeviceName = row.device_name\n            })\n        },\n        openRenameLacolVideoFile(oldName) {\n            this.$prompt('请输入新文件名', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                //   inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n                //   inputErrorMessage: '邮箱格式不正确'\n            }).then(({ value }) => {\n\n                RenameLocalVideoFile({ oldName: oldName, newName: value }).then((response) => {\n                    console.log(response)\n                    if (response.data.code === 666) {\n                        this.$message({\n                            type: 'success',\n                            message: '新文件名: ' + value\n                        });\n                        this.handleOpenLocalFlie()\n                    } else {\n                        this.$message({\n                            type: 'info',\n                            message: response.data.message\n                        });\n                    }\n\n                })\n                console.log(value, oldName)\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '取消输入'\n                });\n            });\n        },\n        handleRemoveLocalVideoFile(val) {\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                RemoveLocalVideoFile({ name: val }).then((response) => {\n                    if (response.data.code === 666) {\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        });\n                        this.handleOpenLocalFlie()\n                    } else {\n                        this.$message({\n                            type: 'info',\n                            message: '删除失败,错误情况:' + response.data.message\n                        });\n                    }\n                })\n\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: '已取消删除'\n                });\n            });\n\n            console.log(val)\n        },\n        DeviceList() {\n            this.showDevice = !this.showDevice\n        },\n        handleViewSatus() {\n            if (this.VideoRecordingStatus === false && this.showBigVideo == false && this.checkTimerVideoTaskStatus() === true) {\n                return this.ViewSatus = !this.ViewSatus\n            } else {\n                if (this.VideoRecordingStatus){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭所有设备视频录制',\n                    });\n                }\n                if(this.showBigVideo){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭全屏',\n                    });\n                }\n                if(!this.checkTimerVideoTaskStatus()){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先等待定时录像任务结束',\n                    });\n                }\n            }\n        },\n        handleVideoRecordingStatus() {\n            if (this.ViewSatus === false && this.showBigVideo == false && this.checkTimerVideoTaskStatus() == true) {\n                return this.VideoRecordingStatus = !this.VideoRecordingStatus\n            } else {\n                if (this.ViewSatus){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭所有设备视频预览',\n                    });\n                }\n                if(this.showBigVideo){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭全屏',\n                    });\n                }\n                if(!this.checkTimerVideoTaskStatus()){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须等待定时录制完成',\n                    });\n                }\n            }\n        },\n        handleTimeSyn() {\n            this.$store.state.deviceList.forEach(function (item) {\n                console.log(item.device_ip.split(\":\")[0])     // 1 2 3 4 5 6\n                SetDeviceTimeSYNC(item.device_ip.split(\":\")[0]).then((response)=>{\n                    console.log(response)\n                    \n                }).then((err)=>{\n                    console.log(err)\n                })\n            })\n            \n        },\n        handleCheckAllChange(val) {\n            this.DownloadLatestFileFromSelectedDevice = val ? this.cities : [];\n            this.isIndeterminate = false;\n        },\n        handleCheckedCitiesChange(value) {\n            let checkedCount = value.length;\n            this.checkAll = checkedCount === this.cities.length;\n            this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n        },\n        handleAddVideoTitle(VideoView,nowpage) {\n            //主要给当前九个视频加上视频标签名，作用用于区分九个视频是属于哪个设备的\n            let dataMap = {}\n            let dataTime = {}\n            let dataList = []\n            let val = nowpage\n            VideoView[val - 1].forEach(function (rowvalue, rowNum) {\n                rowvalue.forEach(function (value, Num) {\n                    // console.log('vlc-' + (val - 1) + '-' + rowNum + '-' + Num)\n                    // console.log(value)\n                    dataMap['vlc-' + (val - 1) + '-' + rowNum + '-' + Num] = value.device_name\n                    dataTime['vlc-' + (val - 1) + '-' + rowNum + '-' + Num] = value.utc_time\n                    dataList.push('vlc-' + (val - 1) + '-' + rowNum + '-' + Num)\n                }\n                )\n            })\n            // console.log(dataMap, \"dataMap\")\n            // console.log(dataList, \"dataList\")\n            dataList.forEach(function (value, key) {\n                key//\n                // console.log(value, key);\n                // console.log(dataMap[value]);\n                let vlc = document.getElementById(value)\n                try {\n                    vlc.video.marquee.text = dataMap[value]  +\"-\"+  dataTime[value][0].toString() + '-' +\n                                                                    dataTime[value][1].toString().padStart(2, '0') + '-' +\n                                                                    dataTime[value][2].toString().padStart(2, '0') + ' ' +\n                                                                    dataTime[value][3].toString().padStart(2, '0') + ':' +\n                                                                    dataTime[value][4].toString().padStart(2, '0') + ':' +\n                                                                    dataTime[value][5].toString().padStart(2, '0')             //（设备名称+时间）文本\n                    vlc.video.marquee.color = 0xFFFF00;                  //颜色\n                    vlc.video.marquee.size = 100;                         //文本大小\n                    vlc.video.marquee.x = 50;                           //文本x方向位置\n                    vlc.video.marquee.y = 50;                           //文本y方向位置\n\n                    vlc.video.marquee.position = \"TOP\";                      //文字位置\n                    vlc.video.marquee.enable()\n                }\n                catch (err) {\n                    console.log(\"no video stream,so add failed!\")\n                }\n\n\n                // console.log(vlc, value)\n            });//延时执行900ms\n        },\n        handleAddVideoUrl() {\n            //播放当前九个视频\n\n            let val = this.nowpage\n            this.VideoView[val - 1].forEach(function (rowvalue, rowNum) {\n                rowvalue.forEach(function (value, Num) {\n                    // console.log('vlc-' + (val - 1) + '-' + rowNum + '-' + Num)\n                    console.log(value)\n                    SearchDeviceInfo(value.device_ip.split(\":\")[0]).then((response) => {\n                        console.log(response.data.video_port)\n                        \n                        let vlc = document.getElementById('vlc-' + (val - 1) + '-' + rowNum + '-' + Num)\n                        vlc.playlist.add('udp://@0.0.0.0:'+response.data.video_port);\n                        vlc.playlist.play();\n                    })\n                }\n                )\n            })\n        },\n        handleClearVideoUrl(){\n            //清除九个视频\n            let val = this.nowpage\n            this.VideoView[val - 1].forEach(function (rowvalue, rowNum) {\n                rowvalue.forEach(function (value, Num) {\n                    // console.log('vlc-' + (val - 1) + '-' + rowNum + '-' + Num)\n                    \n                        \n                    let vlc = document.getElementById('vlc-' + (val - 1) + '-' + rowNum + '-' + Num)\n                    \n                    vlc.playlist.clear()\n                }\n                )\n            })\n        },\n        clickFullscreen(index, row) {\n            if (this.ViewSatus === false && this.checkTimerVideoTaskStatus() == true && this.VideoRecordingStatus === false){\n                this.showBigVideo = !this.showBigVideo\n                if (this.showBigVideo){\n                    console.log(\"clickFullscreen\")\n                    // console.log(this.GoProFileTable.GoProIP)\n\n                    //先查询设备视频端口\n                    SearchDeviceInfo(row.device_ip.split(\":\")[0]).then((response) => {\n                        console.log(response.data.video_port)\n                        \n                        let vlc = document.getElementById('FullScreen')\n                        vlc.playlist.add('udp://@0.0.0.0:'+response.data.video_port);\n                        vlc.playlist.play();\n                        //开启视频播放\n                        DeviceControlWebcamStart(row.device_ip.split(\":\")[0], row.gopro_ip)\n                        this.$notify({\n                            title: '成功',\n                            message: '开始全屏播放'+row.device_name+'设备视频',\n                            type: 'success'\n                        });\n                    })\n                    \n                }else{\n                    let vlc = document.getElementById('FullScreen')\n                    vlc.playlist.clear()\n                    DeviceControlWebcamStop(row.device_ip.split(\":\")[0], row.gopro_ip).then(()=>{\n                        this.$notify.error({\n                            title: '注意！',\n                            message: '关闭全屏播放',\n                        });\n                    })\n                    \n                }\n                \n            }else{\n                if (this.ViewSatus){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭所有设备视频预览',\n                    });\n                }\n                if (this.VideoRecordingStatus){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须先关闭所有设备视频录制',\n                    });\n                }\n                if(!this.checkTimerVideoTaskStatus()){\n                    this.$notify.error({\n                        title: '注意！',\n                        message: '必须等待定时录制完成',\n                    });\n                }\n            }\n            \n        },\n        formatText(percentage, downFileName, total) {\n            return `文件名：${downFileName}，下载进度：${percentage}%,${this.bytesToSize(total)}`;\n        },\n        handleReturnOneVideoFile(data) {\n\n            console.log(\"handleReturnVideo\")\n            DownloadFile(this.GoProFileTable.GoProIP, data.n, this.GoProFileTable.DeviceName + '_' + data.n)\n\n        },\n        checkTimerVideoTaskStatus(){\n            if (this.$store.state.TimedVideoTaskStateWebSocket === null){\n                return true\n            }else{\n                return false\n            }\n        },\n        showTimerVideoTaskStatusS(){\n            // t = this.$store.state.TimedVideoTaskStateWebSocket.end_time - this.$store.state.TimedVideoTaskStateWebSocket.start_time\n            // 获取当前时间戳（以毫秒为单位）\n            // var n = Date.now();\n            if (this.$store.state.TimedVideoTaskStateWebSocket.end_time > Date.now() > this.$store.state.TimedVideoTaskStateWebSocket.start_time){\n                return \"距离结束录像时间剩余：\"//+(this.$store.state.TimedVideoTaskStateWebSocket.end_time - Date.now()/ (1000 * 60)).toString()\n            }\n            if (this.$store.state.TimedVideoTaskStateWebSocket.end_time > this.$store.state.TimedVideoTaskStateWebSocket.start_time >  Date.now()){\n                return \"距离开始录像时间剩余：\"//+(this.$store.state.TimedVideoTaskStateWebSocket.start_time - Date.now()/ (1000 * 60)).toString()\n            }\n        },\n        test(t) {\n            console.log(t)\n        }\n    },\n    \n    watch: {\n        //此时我监听的是对象，当$store.state.userInfo.Name发生修改时，此时需要深度监听才能监听到数据变化\n        \"$store.state.deviceList\": {\n            deep: true,//深度监听设置为 true\n            handler: function () {\n                // console.log(\"数据发生变化啦\"); //修改数据时，能看到输出结果\n                // console.log(newVal, oldVal);\n\n                this.VideoView = this.initVideo()\n\n                this.DevTableData = this.$store.state.deviceList\n                this.cities = []\n                this.$store.state.deviceList.forEach((item) => { this.cities.push(item.device_name) })\n            }\n        },\n        \"ViewSatus\": {\n            deep: true,//深度监听设置为 true\n            handler: function (newVal, oldVal) {\n                console.log(\"ViewSatus数据发生变化啦\"); //修改数据时，能看到输出结果\n                console.log(newVal, oldVal);\n                if (newVal) {\n                    \n                    //对所有设备发送视频流开启和端口转发\n                    this.handleAddVideoUrl()\n                    //对所有设备添加标签\n                    \n                    // 每秒都刷新时间，并且放到画面上\n                    this.intervalID = setInterval(()=> {\n                    // 执行需要定时执行的任务\n                        // console.log(\"更新时间\")\n                        this.handleAddVideoTitle(this.VideoView,this.nowpage)\n                    }, 500); // 1000 毫秒等于 1 秒\n\n                    console.log(this.DevTableData.slice((this.nowpage - 1) * 9, this.nowpage * 9))\n                    this.DevTableData.slice((this.nowpage - 1) * 9, this.nowpage * 9).forEach(function (item) {\n                        console.log(item.device_ip.split(\":\")[0])\n                        // SetGoProWebcam(item.gopro_ip, \"start\")\n                        DeviceControlWebcamStart(item.device_ip.split(\":\")[0], item.gopro_ip)\n                    })\n                    // SetGoProWebcam()\n                    this.$notify({\n                        title: '成功',\n                        message: '已成功打开所有设备视频流',\n                        type: 'success'\n                    });\n                } else {\n                    this.handleClearVideoUrl()\n                    clearInterval(this.intervalID);\n                    this.DevTableData.slice((this.nowpage - 1) * 9, this.nowpage * 9).forEach(function (item) {\n                        console.log(item.device_ip.split(\":\")[0])\n                        DeviceControlWebcamStop(item.device_ip.split(\":\")[0], item.gopro_ip)\n                        // SetGoProWebcam(item.gopro_ip, \"stop\")\n                    })\n                    this.$notify.error({\n                        title: '关闭',\n                        message: '已成功关闭所有设备视频流',\n\n                    });\n                }\n            }\n        },\n        \"VideoRecordingStatus\": {\n            deep: true,//深度监听设置为 true\n            handler: function (newVal, oldVal) {\n                console.log(\"VideoRecordingStatus数据发生变化啦\"); //修改数据时，能看到输出结果\n                console.log(newVal, oldVal);\n                if (newVal) {\n                    // console.log(this.DevTableData.slice((this.nowpage - 1) * 9, this.nowpage * 9))\n                    this.$store.state.deviceList.forEach(function (item) {\n                        console.log(item.gopro_ip)     //后续需要统计所有录像发送指令。\n                        SetGoProShutter(item.gopro_ip, \"start\")\n                    })\n                    this.$notify({\n                        title: '成功',\n                        message: '已开始所有设备录制视频',\n                        type: 'success'\n                    });\n                } else {\n                    this.$store.state.deviceList.forEach(function (item) {\n                        console.log(item.gopro_ip)     //后续需要统计所有录像发送指令。\n                        SetGoProShutter(item.gopro_ip, \"stop\")\n                    })\n                    this.$notify.error({\n                        title: '关闭',\n                        message: '已停止所有设备录制视频'\n\n                    });\n                }\n            }\n        }\n    },\n    mounted() {\n        // this.initVideo\n        this.$store.state.deviceList.forEach((item) => { this.cities.push(item.device_name) })\n        this.VideoView = this.initVideo()\n    }\n}\n</script>\n\n<style lang=\"less\">\n.my-progress-bar .el-progress-bar__outer {\n    background-color: #6e6e6e !important;\n\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VideoView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VideoView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VideoView.vue?vue&type=template&id=5564afe8&\"\nimport script from \"./VideoView.vue?vue&type=script&lang=js&\"\nexport * from \"./VideoView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VideoView.vue?vue&type=style&index=0&id=5564afe8&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","attrs","ViewSatus","on","$event","handleViewSatus","_v","directives","name","rawName","value","checkTimerVideoTaskStatus","expression","handleTimingTecordingTimeOpen","handleStopTimedVideoTask","LocalFilesDialogVisible","VideoRecordingStatus","handleVideoRecordingStatus","handleOpenLocalFlie","handleTimeSyn","DeviceList","_s","showDevice","showBigVideo","_e","VideoView","length","_l","batchVideo","Videopage","key","nowpage","rowVideo","rowNum","Video","Num","timingDialogVisible","$store","state","deviceList","handleCurrentChange","downLoadStatus","item","done","Math","ceil","progress","total","percentage","formatText","file_name","scopedSlots","_u","fn","scope","row","gopro_ip","slot","device_name","handleReturnVideo","$index","clickFullscreen","handleReturnVideoFileList","model","timingTecordingTimeValue1","callback","$$v","handletimingTecordingTime","localFileStorageDialogTableVisible","VideoFilesTableData","ModTime","split","bytesToSize","parseInt","Size","openRenameLacolVideoFile","Name","handleRemoveLocalVideoFile","GoProFileTable","GoProIP","ReturnVideoFileListdialogTableVisible","FileList","Date","cre","toISOString","s","handleReturnOneVideoFile","isIndeterminate","handleCheckAllChange","checkAll","handleCheckedCitiesChange","DownloadLatestFileFromSelectedDevice","cities","city","handleBatchVideoBack","staticRenderFns","data","intervalID","dialogTableVisible","BigVideoID","DevTableData","DeviceName","flvVideoList","methods","initVideo","num","result","outdata","console","j","clickVideo","handleViewLocalFiles","window","title","message","TimedVideoTask","TimedVideoTaskCancel","selectedDevices","GetGoProMediaList","DownloadFile","OpenFolder","sizes","i","handleEdit","handleWatchVideo","confirmButtonText","cancelButtonText","RenameLocalVideoFile","oldName","newName","type","RemoveLocalVideoFile","SetDeviceTimeSYNC","handleAddVideoTitle","rowvalue","dataMap","dataTime","dataList","vlc","handleAddVideoUrl","SearchDeviceInfo","handleClearVideoUrl","DeviceControlWebcamStart","DeviceControlWebcamStop","showTimerVideoTaskStatusS","test","watch","deep","handler","clearInterval","SetGoProShutter","mounted","component"],"sourceRoot":""}